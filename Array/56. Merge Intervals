class Solution {                                                //先排序，再依次添加，或者合并
public:
    vector<Interval> merge(vector<Interval>& intervals) {
        vector<Interval> res;
        int n = intervals.size();
        if(n <= 1) return intervals;
        sort(intervals.begin(),intervals.end(),[](Interval a,Interval b){return a.start<b.start;});
        for (int i = 0;i<n;++i){      
            if(res.empty()|| res.back().end<intervals[i].start) {
                res.push_back(intervals[i]);
            }
            else{
                auto res_back = res.back();
                Interval cur(min(intervals[i].start,res_back.start),max(intervals[i].end,res_back.end));
                res.pop_back();
                res.push_back(cur);
            }

        }
        return res;
    }
};
