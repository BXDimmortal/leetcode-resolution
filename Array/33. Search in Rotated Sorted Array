class Solution {                                     //这道题是将原来排好序的数组改变了，再用二分查找，如果最左边的值小于最右边的值，则进行普通的
public:                                              //二分查找，否则分成两部分，分别进行二分查找。
    int search(vector<int>& nums, int target) {
        if(nums.empty()) return -1;
        return bi_search(nums,0,nums.size()-1,target);
    }
    int bi_search(vector<int> nums,int left,int right,int target){
        if(left > right) return -1;
        if(left == right) return nums[left] == target?left:-1;
        int mid = (left+right)/2;
        if(nums[mid] == target) return mid;
        if(nums[left] < nums[right]){  
            return nums[mid]<target?bi_search(nums,mid+1,right,target):bi_search(nums,left,mid-1,target);
        }else{
            int before = bi_search(nums,mid+1,right,target);
            int after = bi_search(nums,left,mid-1,target);
            if((before == -1) && (after == -1)){
                return -1;
            }else{
                return before == -1?after:before;
            }
        }
    }
    
};
